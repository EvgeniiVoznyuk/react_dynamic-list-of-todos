{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","components/SearchBar/SearchBar.jsx","components/Select/Select.jsx","components/Randomizer/Randomizer.jsx","App.jsx","index.js"],"names":["Todo","title","completed","userId","id","selected","clickHandler","className","cn","type","readOnly","onClick","TodoList","todos","map","todo","key","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","CurrentUser","state","user","this","props","setState","loadData","prevProps","name","email","phone","React","Component","SearchBar","value","handleChange","placeholder","onChange","Select","changeHandler","Randomizer","App","select","query","selectedPost","selectedUserId","selectPost","postId","clear","event","target","filterBySearch","filter","toLowerCase","includes","filterBySelect","random","prevState","sort","Math","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f276f395.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nexport const Todo = (\n  { title,\n    completed,\n    userId,\n    id,\n    selected,\n    clickHandler }\n  ) => (\n  <li\n    className={cn(\n      'TodoList__item', {'TodoList__item--unchecked': !completed},\n        {'TodoList__item--checked': completed}\n    )}\n  >\n  <label>\n    <input type=\"checkbox\" readOnly />\n    <p>{title}</p>\n  </label>\n\n  <button\n    className={cn(\n      `TodoList__user-button button`,\n      {'TodoList__user-button--selected': id === selected}\n    )}\n    type=\"button\"\n    onClick={()=>clickHandler(id,userId)}\n  >\n    User&nbsp;#{userId}\n  </button>\n</li>\n)","import React from 'react';\nimport { Todo } from '../Todo';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, clickHandler, selected }) => (\n  <div className=\"TodoList\">\n    \n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <Todo\n            {...todo}\n            key={todo.id}\n            clickHandler={clickHandler}\n            selected={selected}\n          />\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nfunction request(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(result => result.data);\n}\n\nexport function getTodos() {\n  return request(`/todos`);\n}\n\nexport function getUser(userId) {\n  return request(`/users/${userId}`);\n}","import React from 'react';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.userId);\n    this.setState({ user })\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if(prevProps.userId !== this.props.userId) {\n      this.loadData()\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return !user ? (\n      <h1>User not found</h1>\n    ) :\n    (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>Selected user:{user.id} </span>\n        </h2>\n        <button\n          className=\"CurrentUser__clear\"\n          onClick={this.props.clickHandler}\n        >\n          Clear\n        </button>\n  \n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n    )\n  }\n  \n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBar.scss'\n\nexport const SearchBar = ({ value, handleChange }) => (\n  \n  <div className=\"search-bar\">\n    <input\n      type=\"text\"\n      name=\"query\"\n      id=\"search-query\"\n      className=\"search-bar__input\"\n      value={value}\n      placeholder=\"Type search word\"\n      onChange={handleChange}\n    />\n  </div>\n);\n\nSearchBar.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Select.scss';\n\nexport const Select = ({ changeHandler }) => (\n  <div className=\"select\">\n    <select\n      className=\"select__bar\"\n      name=\"select\"\n      onChange={changeHandler}\n    >\n    <option value=\"All\">All</option>\n    <option value=\"Completed\">Completed</option>\n    <option value=\"Active\">Active</option>\n  </select>\n  </div>\n  \n    \n);\n\nSelect.propTypes = {\n  changeHandler: PropTypes.func.isRequired,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Randomizer.scss';\n\nexport const Randomizer = ({ clickHandler }) => (\n  <div className=\"randomizer\">\n    <button\n      className=\"randomizer__button\"\n      onClick={clickHandler}\n    >\n      Random\n    </button>\n  </div>\n);\n\nRandomizer.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { SearchBar } from './components/SearchBar';\nimport { Select } from './components/Select';\nimport { Randomizer } from './components/Randomizer';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    select: 'All',\n    query: '',\n    todos: [],\n    selectedPost: 0,\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        this.setState({\n          todos: todos\n            .filter(todo => todo.title !== '')\n        });\n      });\n\n  }\n\n  selectPost = (postId, userId) => {\n    this.setState({ selectedUserId: userId,\n      selectedPost: postId });\n  }\n\n  clear = () => {\n    this.setState({\n      selectedPost: 0,\n      selectedUserId: 0,\n    })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  filterBySearch = (todos) => {\n    const { query } = this.state;\n\n    return todos.filter(({ title }) => (\n      title.toLowerCase().includes(query.toLowerCase())\n    ));\n  }\n\n\n  filterBySelect = (todos) => {\n    const { select } = this.state;\n    switch(select) {\n      case 'All': return this.state.todos;\n      case 'Active': return todos\n        .filter(todo => !todo.completed)\n      case 'Completed': return todos\n      .filter(todo => todo.completed)\n    }\n  }\n\n  filter(todos) {\n    if(!todos) {\n      const todos = this.filterBySelect(this.state.todos);\n      return this.filterBySearch(todos);\n    }\n  }\n\n  random = () => {\n    this.setState(prevState => (\n      {\n        todos: [...prevState.todos]\n          .sort(function(){\n          return Math.random() - 0.5;\n        })\n      }\n    ))\n  }\n\n  componentDidUpdate() {\n    console.log(1);\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <h2>Todos:</h2>\n          <div className=\"App__tools\">\n            <SearchBar\n              handleChange={this.handleChange}\n              value={this.state.query}\n            />\n            <Select changeHandler={this.handleChange} />\n            <Randomizer clickHandler={this.random} />\n          </div>\n          <TodoList\n            todos={this.filter()}\n            selected={this.state.selectedPost}\n            clickHandler={this.selectPost}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clickHandler={this.clear}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}