{"version":3,"sources":["components/Todo/Todo.jsx","components/TodoList/TodoList.jsx","api/api.js","components/CurrentUser/CurrentUser.jsx","components/SearchBar/SearchBar.jsx","components/Select/Select.jsx","components/Randomizer/Randomizer.jsx","App.jsx","index.js"],"names":["Todo","title","completed","userId","id","selected","clickHandler","className","cn","type","readOnly","onClick","TodoList","todos","map","todo","key","request","url","fetch","then","response","ok","Error","status","statusText","json","result","data","wait","delay","Promise","resolve","setTimeout","getTodos","a","getUser","CurrentUser","state","user","isLoading","this","loadData","prevProps","props","setState","loader","name","email","phone","React","Component","SearchBar","value","handleChange","placeholder","onChange","Select","changeHandler","Randomizer","App","select","searchQuery","selectedPost","selectedUserId","hasLoadinsErros","selectPost","postId","clearSelectedUser","event","target","filterBySearch","filter","toLowerCase","includes","filterBySelect","randomSortTodos","prevState","sort","Math","random","color","height","width","timeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75479fbf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const Todo = (\n  { title,\n    completed,\n    userId,\n    id,\n    selected,\n    clickHandler },\n) => (\n  <li\n    className={cn(\n      'TodoList__item', { 'TodoList__item--unchecked': !completed },\n      { 'TodoList__item--checked': completed },\n    )}\n  >\n    <label>\n      <input type=\"checkbox\" readOnly />\n      <p>{title}</p>\n    </label>\n\n    <button\n      className={cn(\n        `TodoList__user-button button`,\n        { 'TodoList__user-button--selected': id === selected },\n      )}\n      type=\"button\"\n      onClick={() => clickHandler(id, userId)}\n    >\n      User&nbsp;#\n      {userId}\n    </button>\n  </li>\n);\n\nTodo.propTypes = {\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  userId: PropTypes.number.isRequired,\n  id: PropTypes.number.isRequired,\n  selected: PropTypes.number.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, clickHandler, selected }) => (\n  <div className=\"TodoList\">\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <Todo\n            {...todo}\n            key={todo.id}\n            clickHandler={clickHandler}\n            selected={selected}\n          />\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  clickHandler: PropTypes.func.isRequired,\n  selected: PropTypes.number.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nfunction request(url) {\n  return fetch(`${BASE_URL}${url}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    })\n    .then(result => result.data);\n}\n\nfunction wait(delay) {\n  return new Promise(resolve => setTimeout(resolve, delay))\n}\n\nexport const getTodos = async () => {\n  await wait(1000);\n  return request(`/todos`);\n}\n\nexport const getUser = async (userId) => {\n  await wait(1000);\n  return request(`/users/${userId}`);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getUser } from '../../api/api';\nimport './CurrentUser.scss';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: {},\n    isLoading: true,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    this.setState({ isLoading: true });\n    const user = await getUser(this.props.userId);\n\n    this.setState({\n      user,\n      isLoading: false,\n    });\n  }\n\n  render() {\n    const { user, isLoading } = this.state;\n\n    if (isLoading) {\n      return this.props.loader();\n    }\n\n    return !user ? (\n      <h1>User not found</h1>\n    )\n      : (\n        <div className=\"CurrentUser\">\n          <h2 className=\"CurrentUser__title\">\n            <span>\n              Selected user:\n              {user.id}\n            </span>\n          </h2>\n          <button\n            type=\"button\"\n            className=\"CurrentUser__clear\"\n            onClick={this.props.clickHandler}\n          >\n            Clear\n          </button>\n\n          <h3 className=\"CurrentUser__name\">{user.name}</h3>\n          <p className=\"CurrentUser__email\">{user.email}</p>\n          <p className=\"CurrentUser__phone\">{user.phone}</p>\n        </div>\n      );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clickHandler: PropTypes.func.isRequired,\n  loader: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SearchBar.scss';\n\nexport const SearchBar = ({ value, handleChange }) => (\n\n  <div className=\"search-bar\">\n    <input\n      type=\"text\"\n      name=\"searchQuery\"\n      id=\"search-query\"\n      className=\"search-bar__input\"\n      value={value}\n      placeholder=\"Type search word\"\n      onChange={handleChange}\n    />\n  </div>\n);\n\nSearchBar.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Select.scss';\n\nexport const Select = ({ changeHandler }) => (\n  <div className=\"select\">\n    <select\n      className=\"select__bar\"\n      name=\"select\"\n      onChange={changeHandler}\n    >\n      <option value=\"All\">All</option>\n      <option value=\"Completed\">Completed</option>\n      <option value=\"Active\">Active</option>\n    </select>\n  </div>\n\n);\n\nSelect.propTypes = {\n  changeHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Randomizer.scss';\n\nexport const Randomizer = ({ clickHandler }) => (\n  <div className=\"randomizer\">\n    <button\n      className=\"randomizer__button\"\n      onClick={clickHandler}\n    >\n      Random\n    </button>\n  </div>\n);\n\nRandomizer.propTypes = {\n  clickHandler: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { SearchBar } from './components/SearchBar';\nimport { Select } from './components/Select';\nimport { Randomizer } from './components/Randomizer';\nimport { getTodos } from './api/api';\n\nclass App extends React.Component {\n  state = {\n    select: 'All',\n    searchQuery: '',\n    todos: [],\n    selectedPost: 0,\n    selectedUserId: 0,\n    isLoading: true,\n    hasLoadinsErros: false,\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then((todos) => {\n        try {\n          this.setState({\n            todos: todos\n              .filter(todo => !!todo.title),\n            isLoading: false,\n          });\n        } catch {\n          this.setState({ hasLoadinsErros: true });\n        }\n      });\n  }\n\n  selectPost = (postId, userId) => {\n    this.setState({\n      selectedUserId: userId,\n      selectedPost: postId,\n    });\n  }\n\n  clearSelectedUser = () => {\n    this.setState({\n      selectedPost: 0,\n      selectedUserId: 0,\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({ [name]: value });\n  }\n\n  filterBySearch = (todos) => {\n    const { searchQuery } = this.state;\n\n    return todos.filter(({ title }) => (\n      title.toLowerCase().includes(searchQuery.toLowerCase())\n    ));\n  }\n\n  filterBySelect = (todos) => {\n    const { select } = this.state;\n\n    switch (select) {\n      case 'All': return this.state.todos;\n      case 'Active': return todos\n        .filter(todo => !todo.completed);\n      case 'Completed': return todos\n        .filter(todo => todo.completed);\n      default: break;\n    }\n\n    return this.state.todos;\n  }\n\n  randomSortTodos = () => {\n    this.setState(prevState => (\n      {\n        todos: [...prevState.todos]\n          .sort(() => Math.random() - 0.5),\n      }\n    ));\n  }\n\n  loader = () => (\n    <Loader\n      className=\"App__loader\"\n      type=\"Oval\"\n      color=\"#4d457b\"\n      height={70}\n      width={70}\n      timeout={1500}\n    />\n  )\n\n  filter() {\n    const todos = this.filterBySelect(this.state.todos);\n\n    if (this.state.searchQuery !== '' && this.state.todos !== null) {\n      return this.filterBySearch(todos);\n    }\n\n    return todos;\n  }\n\n  render() {\n    const {\n      selectedUserId,\n      isLoading,\n      hasLoadinsErros,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <h2>Todos:</h2>\n          <div className=\"App__tools\">\n            <SearchBar\n              handleChange={this.handleChange}\n              value={this.state.searchQuery}\n            />\n            <Select changeHandler={this.handleChange} />\n            <Randomizer clickHandler={this.randomSortTodos} />\n          </div>\n          {isLoading ? this.loader()\n            : (\n              <TodoList\n                todos={this.filter()}\n                selected={this.state.selectedPost}\n                clickHandler={this.selectPost}\n              />\n            )\n          }\n          {hasLoadinsErros && (<h1> Error </h1>)}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clickHandler={this.clearSelectedUser}\n                loader={this.loader}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}